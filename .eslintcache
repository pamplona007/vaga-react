[{"F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\index.js":"1","F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\App.js":"2","F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\util\\firebaseUtils.js":"3","F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Layout\\Header.js":"4","F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Layout\\Nav.js":"5","F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Content\\Home.js":"6","F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Login.js":"7","F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Layout\\Layout.js":"8","F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Content\\Newcar.js":"9","F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Content\\Offers.js":"10","F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Content\\Singlecar.js":"11","F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Content\\Editcar.js":"12"},{"size":428,"mtime":1607869216189,"results":"13","hashOfConfig":"14"},{"size":1034,"mtime":1607869063212,"results":"15","hashOfConfig":"14"},{"size":451,"mtime":1607789470097,"results":"16","hashOfConfig":"14"},{"size":306,"mtime":1607810251135,"results":"17","hashOfConfig":"14"},{"size":395,"mtime":1607868789112,"results":"18","hashOfConfig":"14"},{"size":4275,"mtime":1607894700895,"results":"19","hashOfConfig":"14"},{"size":1131,"mtime":1607897889415,"results":"20","hashOfConfig":"14"},{"size":574,"mtime":1607810014692,"results":"21","hashOfConfig":"14"},{"size":7048,"mtime":1607899722894,"results":"22","hashOfConfig":"14"},{"size":5790,"mtime":1607895923346,"results":"23","hashOfConfig":"14"},{"size":3886,"mtime":1607895963563,"results":"24","hashOfConfig":"14"},{"size":10971,"mtime":1607899852764,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"10ew7eb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\index.js",[],["53","54"],"F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\App.js",[],"F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\util\\firebaseUtils.js",[],"F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Layout\\Header.js",[],"F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Layout\\Nav.js",[],"F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Content\\Home.js",[],"F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Login.js",[],"F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Layout\\Layout.js",[],"F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Content\\Newcar.js",["55"],"F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Content\\Offers.js",["56","57"],"import React from 'react'\r\nimport firebase from 'firebase'\r\nimport { Button, Row, Col, Divider, Space, Spin, List, Card, Radio } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { db } from '../../util/firebaseUtils'\r\nimport { EyeOutlined, ReloadOutlined, UnorderedListOutlined, TableOutlined } from '@ant-design/icons';\r\n\r\nconst Offers = () => {\r\n    const [ cars, setCars ] = React.useState([])\r\n    const [ loading, setLoading ] = React.useState(false)\r\n    const [ reload, setReload ] = React.useState('')\r\n    const [ layout, setLayout ] = React.useState(0)\r\n    const { Meta } = Card;\r\n    const IconText = ({ icon, text }) => (\r\n        <Space>\r\n            {React.createElement(icon)}\r\n            {text}\r\n        </Space>\r\n    );\r\n    \r\n    async function getImgRef(img) {\r\n        const storageRef = firebase.storage().ref();\r\n        const imgRef = storageRef.child(`images/${img}.png`)\r\n        let link;\r\n        await imgRef.getDownloadURL()\r\n            .then(url => {\r\n                link = url;\r\n            })\r\n        return link;\r\n    }\r\n\r\n    async function getCarData() {\r\n        setLoading(true)\r\n        let data = []\r\n        let rawCars;\r\n\r\n        await db.collection('cars').get()\r\n            .then(response => {\r\n                rawCars = response;\r\n        })\r\n\r\n        let i = 0\r\n        for (const car of rawCars.docs) {\r\n            let carData = car.data()\r\n            await getImgRef(carData.images[0]).then(result => {\r\n                let toTable = {\r\n                    key: `${rawCars.docs[i].id}`,\r\n                    model: `${carData.brand}, ${carData.model}`,\r\n                    year: `${carData.year}`,\r\n                    price: `R$ ${carData.price}`,\r\n                    avatar: result,\r\n                    views: carData.views\r\n                }    \r\n                data.push(toTable);\r\n            })\r\n            i++\r\n        }\r\n        \r\n        setCars(data)\r\n        setLoading(false)\r\n    }\r\n\r\n    function changeLayout(e) {\r\n        switch (e.target.value) {\r\n            case 'list':\r\n                setLayout(0)\r\n                localStorage.setItem('layout', 0)\r\n                break;\r\n            case 'grid':\r\n                setLayout(1)               \r\n                localStorage.setItem('layout', 1)\r\n                break;\r\n            default :\r\n                console.log('NÃ£o temos esse layout ;v');\r\n                break;\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getCarData()\r\n        if (localStorage.getItem('layout')) {\r\n            setLayout(Number(localStorage.getItem('layout')))\r\n        }\r\n    }, [reload])\r\n\r\n    const grid = layout ? {\r\n        grid: {\r\n            gutter: 0,\r\n            column: 4,\r\n        }\r\n    } : ''\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <h1>Ofertas</h1>\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            <Row gutter={[0,16]}>\r\n                <Col span={24} className={'controls'}>\r\n                    <Space>\r\n                        <Radio.Group onChange={changeLayout} value={layout ? 'grid' : 'list'}>\r\n                            <Radio.Button value='grid'><TableOutlined /></Radio.Button>\r\n                            <Radio.Button value='list'><UnorderedListOutlined /></Radio.Button>\r\n                        </Radio.Group>\r\n\r\n                        <Button type=\"secondary\" shape=\"circle\" icon={<ReloadOutlined />} onClick={() => setReload(Math.random())} />\r\n                    </Space>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Spin spinning={loading}>\r\n                        <List \r\n                            itemLayout=\"vertical\"\r\n                            size=\"large\"\r\n                            {...grid}\r\n                            dataSource={cars}\r\n                            pagination={{\r\n                                pageSize: 10,\r\n                            }}\r\n                            renderItem={item => (\r\n                                <List.Item \r\n                                    key={item.key}\r\n                                    extra={layout ? '' : <Link to={`${item.key}`}><div className={layout ? 'img-avatar grid' : 'img-avatar'} style={{ backgroundImage: \"url(\" + item.avatar + \")\" }}></div></Link>}\r\n                                    actions={layout ? [] : [<IconText icon={EyeOutlined} text={item.views} key=\"views-number\" />]}\r\n                                >\r\n                                    {layout ? (\r\n                                        <Link to={`${item.key}`}>\r\n                                            <Card \r\n                                                size='small'\r\n                                                hoverable\r\n                                                cover={<img alt=\"example\" src={item.avatar} />}\r\n                                                actions={[<IconText icon={EyeOutlined} text={item.views} key=\"views-number\" />]}\r\n                                            >\r\n                                                <Meta title={item.model} description={item.price} />\r\n                                                <p></p>\r\n                                            </Card>\r\n                                        </Link>\r\n                                    ) : (\r\n                                        <List.Item.Meta title={<Link to={`${item.key}`}>{`${item.model}`}</Link>} description={item.price}/>\r\n                                    )}\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                    </Spin>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Offers\r\n\r\n","F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Content\\Singlecar.js",["58"],"import React from 'react'\r\nimport firebase from 'firebase';\r\nimport { useParams } from 'react-router-dom';\r\nimport { db } from '../../util/firebaseUtils';\r\nimport { Carousel, Col, Descriptions, Image, Row, Spin, Typography, Space } from 'antd';\r\nimport { EyeOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst Singlecar = () => {\r\n    const params = useParams();\r\n    const [ car, setCar ] = React.useState(null)\r\n    const [ images, setImages ] = React.useState([]);\r\n    const [ loading, setLoading ] = React.useState(false);\r\n    const { Title } = Typography;\r\n    const IconText = ({ icon, text }) => (\r\n        <Space>\r\n            {React.createElement(icon)}\r\n            {text}\r\n        </Space>\r\n    );\r\n\r\n    async function getImgRef(img) {\r\n        const storageRef = firebase.storage().ref();\r\n        const imgRef = storageRef.child(`images/${img}.png`)\r\n        let link;\r\n        await imgRef.getDownloadURL()\r\n            .then(url => {\r\n                link = url;\r\n            })\r\n        return link;\r\n    }\r\n            \r\n    async function getImages(imgArray) {\r\n        let uris = []\r\n        for (const img of imgArray) {\r\n            await getImgRef(img).then(result => {\r\n                uris.push(result)\r\n            })\r\n        }\r\n        setImages(uris)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setLoading(true)\r\n        db.collection('cars').doc(params.id).get()\r\n            .then(response => {\r\n                setCar({...response.data(), views: response.data().views + 1})\r\n                getImages(response.data().images)\r\n                db.collection('cars').doc(params.id).update({\r\n                    views: response.data().views + 1\r\n                })\r\n                setLoading(false)\r\n            })\r\n            .catch(error => {\r\n                console.log('Erro ao recuperar informaÃ§Ãµes '+error);\r\n            })\r\n    }, [])\r\n\r\n    const creationDate = car ? new Date(car.created.toMillis()).toLocaleDateString() : ''\r\n\r\n\r\n    return (\r\n        <>\r\n        <Spin spinning={loading}>\r\n            <Row gutter={[30, { xs: 8, sm: 16, md: 24, lg: 32 }]}>\r\n                <Col span={24}>\r\n                    <Carousel autoplay>\r\n                        {images.map((item, index) => (\r\n                            <div className='car-carrousel'><Image width='100%' className='car-img' src={item} /></div>\r\n                        ))}\r\n                    </Carousel>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[30, { xs: 8, sm: 16, md: 24, lg: 32 }]}>\r\n                <Col>\r\n                    {car && (\r\n                        <>\r\n                            <Title>{car.brand}, {car.model}</Title>\r\n                            <Descriptions \r\n                                title={`R$ ${car.price}`}\r\n                                extra={\r\n                                    <div className=\"controls\">\r\n                                        <IconText icon={EyeOutlined} text={car.views} key=\"views-number\" />\r\n                                        <p>Criado em: {creationDate}</p>\r\n                                    </div>\r\n                            }\r\n                            >\r\n                                <Descriptions.Item label=\"Ano\">{car.year}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Cor\">{car.color}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Cidade\">{car.city}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Quilometragem\">{car.distance}</Descriptions.Item>\r\n                                <Descriptions.Item label=\"Placa\">{car.plate}</Descriptions.Item>\r\n                            </Descriptions>\r\n                        </>    \r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Spin>\r\n        </>\r\n  )\r\n}\r\n\r\nexport default Singlecar\r\n\r\n","F:\\Cloud\\OneDrive\\Documentos\\Trabalhos\\Code\\Vaga ReactJs\\teste\\src\\components\\Content\\Editcar.js",["59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":37,"column":23,"nodeType":"67","messageId":"68","endLine":37,"endColumn":28},{"ruleId":"69","severity":1,"message":"70","line":45,"column":53,"nodeType":"71","messageId":"72","endLine":55,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":84,"column":8,"nodeType":"75","endLine":84,"endColumn":16,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":57,"column":8,"nodeType":"75","endLine":57,"endColumn":10,"suggestions":"78"},{"ruleId":"65","severity":1,"message":"66","line":88,"column":23,"nodeType":"67","messageId":"68","endLine":88,"endColumn":28},{"ruleId":"73","severity":1,"message":"79","line":120,"column":8,"nodeType":"75","endLine":120,"endColumn":27,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'image' is assigned a value but never used.","Identifier","unusedVar","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'rawCars', 'i'.","ArrowFunctionExpression","unsafeRefs","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getCarData'. Either include it or remove the dependency array.","ArrayExpression",["83"],"React Hook React.useEffect has missing dependencies: 'getImages' and 'params.id'. Either include them or remove the dependency array.",["84"],"React Hook React.useEffect has a missing dependency: 'getImages'. Either include it or remove the dependency array.",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [getCarData, reload]",{"range":"92","text":"93"},"Update the dependencies array to be: [getImages, params.id]",{"range":"94","text":"95"},"Update the dependencies array to be: [reload, params.id, getImages]",{"range":"96","text":"97"},[2620,2628],"[getCarData, reload]",[1871,1873],"[getImages, params.id]",[4221,4240],"[reload, params.id, getImages]"]